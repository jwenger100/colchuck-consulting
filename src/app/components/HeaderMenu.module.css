@keyframes cascadeFadeIn {
  to {
    visibility: visible;
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.headerVisible {
  animation: slideDown 0.5s ease-out forwards;
}

.header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: rem(56);
  z-index: 2;
  animation: slideDown 0.5s ease-out forwards;
  background-color: var(--mantine-color-body);
  border-bottom: rem(1px) solid
    light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));
}

.inner {
  height: rem(56px);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.link {
  display: block;
  line-height: 1;
  font-size: var(--mantine-font-size-sm);
  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));
  padding-top: rem(26px);
  padding-bottom: rem(16px);
  padding-left: rem(12px);
  padding-right: rem(12px);
  font-weight: 500;
  border-bottom: rem(2px) solid transparent;
  transition: border-color 100ms ease, color 100ms ease;
  text-decoration: none;
  position: relative;
  overflow: hidden;

  @mixin hover {
    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));
    text-decoration: none;
  }

  &[data-active] {
    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));
  }
}

.link::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: var(--cc-green);
  transform: scaleX(0);
  transform-origin: center;
  transition: transform 0.3s ease-out;
}

.link:hover::after {
  transform: scaleX(1);
  transform-origin: center;
}

.link[data-active]::after {
  transform: scaleX(1);
  transform-origin: center;
}

.linkLabel {
  margin-right: rem(5px);
}

/* Drawer styling */
.drawerContent {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  width: 100%;
}
/* Override the active state style for links inside the drawer */
/* .drawerContent .link[data-active]::after { */
/* TODO: figure this out later */
/* Prevent the active state from showing in the drawer */
/* transform: scaleX(0); Override to not show the active state indicator */
/* } */

.drawerContent a {
  font-size: rem(24px);
  visibility: hidden; /* Hide the element but still take up space */
  opacity: 0;
  animation: cascadeFadeIn 0.5s ease forwards;
}

/* Apply staggered animation delays */
.drawerContent a:nth-child(1) {
  animation-delay: 0.1s;
}
.drawerContent a:nth-child(2) {
  animation-delay: 0.2s;
}
.drawerContent a:nth-child(3) {
  animation-delay: 0.3s;
}
.drawerContent a:nth-child(4) {
  animation-delay: 0.4s;
}
.drawerContent a:nth-child(5) {
  animation-delay: 0.5s;
}
.drawerContent a:nth-child(6) {
  animation-delay: 0.6s;
}

.cascadeFadeInSocialIcons {
  visibility: hidden;
  opacity: 0;
  animation: cascadeFadeIn 0.75s ease forwards;
  animation-delay: 0.75s;
}

.socialIcon {
  color: var(--mantine-color-gray-7);
  &:hover {
    color: var(--cc-green);
  }
}
